default:
  tags: [build]

stages:
  - build
  - code_style
  - test
  - deploy
  - notify

build_job:
  stage: build
  script:
    - rm -fr artifacts
    - mkdir artifacts
    - (cd src/cat && make clean && make s21_cat)
    - (cd src/grep && make clean && make s21_grep)
    - cp src/cat/s21_cat src/grep/s21_grep artifacts
  artifacts:
    paths:
      - artifacts
    expire_in: 30 days
  only:
    - develop

clang_format_job:
  stage: code_style
  script:
    - cp materials/linters/.clang-format src/cat/
    - cp materials/linters/.clang-format src/grep/
    - echo "Running clang-format check..."
    - |
      if clang-format -n --Werror --verbose src/cat/*.c src/grep/*.c; then
        echo "Clang-format check passed."
      else
        echo "clang-format check failed."
        exit 1
      fi
  only:
    - develop
  allow_failure: false

integration_test_job:
  stage: test
  script:
    - echo "Running integration tests..."
    - set -e
    - (cd src/cat && make test) || { echo "Integration tests for s21_cat failed."; exit 1; }
    - (cd src/grep && make test) || { echo "Integration tests for s21_grep failed."; exit 1; }
    - echo "All integration tests passed successfully."
  only:
    - develop
  dependencies:
    - build_job
    - clang_format_job
  allow_failure: false

deploy_job:
  stage: deploy
  script:
    - echo "Deploying to the second virtual machine..."
    - chmod +x src/deploy_to_second_vm.sh
    - bash src/deploy_to_second_vm.sh
  when: manual
  only:
    - develop
  dependencies:
    - build_job
    - clang_format_job
    - integration_test_job
  allow_failure: false

notify_job:
  stage: notify
  script:
    - echo "Sending notification to Telegram..."
    - chmod +x src/telegram_notify.sh
    - bash src/telegram_notify.sh
  when: always
  only:
    - develop
  dependencies:
    - build_job
    - clang_format_job
    - integration_test_job
    - deploy_job